<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tidy eval on Tom&#39;s code blog</title>
    <link>/categories/tidy-eval/</link>
    <description>Recent content in tidy eval on Tom&#39;s code blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/tidy-eval/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>map(expr) &#43; renderUI -&gt; dynamic shiny</title>
      <link>/2019/04/15/map-expr-renderui-dynamic-shiny/</link>
      <pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/15/map-expr-renderui-dynamic-shiny/</guid>
      <description>I wrote my first shiny widget. A shiny widget is an html widget which uses shiny functions. In form it resembles a shiny app very closely, only the shinyApp function is wrapped in another function, which can take whatever arguments you like. More background can be found here.
In order for the shiny widget to run, it needs a shiny runtime behind the document, which means it needs a server, just like a shiny app.</description>
    </item>
    
    <item>
      <title>fun with map ( expr ) %&gt;% reduce </title>
      <link>/2019/01/27/metaprogramming-with-map-quo-reduce/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/27/metaprogramming-with-map-quo-reduce/</guid>
      <description>Ever since I discovered the rlang function ‘expr’ I have become mildy obsessed with the idea of writing code which writes code. This will be the first of probably many posts where I experiment with combining either iteration or recursion with non-standard evaluation. However, before launching into anything genuinely useful, some background is required:
R is an ‘eagerly evaluated’ language, which means if you write:
a &amp;lt;- 50 and then just write a and hit enter you get:</description>
    </item>
    
  </channel>
</rss>